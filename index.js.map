{"version":3,"file":"index.js","sources":["../src/components/core.ts","../src/components/InputControls.vue","../src/components/UrlList.vue","../src/main.ts"],"sourcesContent":["import {computed, ref, Ref, ComputedRef} from \"vue\";\n\nexport const inputText: Ref<string> = ref(\"\");\n\nexport type UrlEntry = {\n    url: string,\n    comment?: string\n}\n\nexport const urlEntryList: ComputedRef<UrlEntry[]> = computed(() => {\n    return parseUrlEntries(inputText.value);\n});\n\nexport const urls: ComputedRef<string[]> = computed(() => {\n    return urlEntryList.value.map(ue => ue.url);\n});\n\n\n// todo add tests\nexport function parseUrlEntries(text: string) {\n    const lines = text.split(\"\\n\").map(line => line.trim()).filter(line => line);\n    const urls: UrlEntry[] = [];\n    for (const line of lines) {\n        const [main, ...comments] = line.split(/\\s+(#|\\/\\/)/);\n        const [firstWord, ...words] = main.trim().split(/\\s+/);\n\n        if (firstWord.startsWith(\"http\")) {\n            const url = matchUrl(firstWord);\n            if (url && words.every(word => !matchUrl(word))) {\n                urls.push({\n                    url,\n                    comment: [...words, ...comments].join(\" \")\n                });\n                continue;\n            }\n            if (url) {\n                urls.push({url});\n            }\n        } else {\n            words.unshift(firstWord);\n        }\n\n        for (const word of words) {\n            const url = matchUrl(word);\n            if (url) {\n                urls.push({url});\n            }\n        }\n    }\n    return urls;\n}\n\nfunction matchUrl(word: string) {\n    const match = word.match(/(['\"]?)(?<url>https?:\\/\\/[^\\s\"]+)(\\1)/);\n    console.log(match);\n    if (match?.groups) {\n        return match.groups.url;\n    }\n}\n\nexport function getCodeArrays(items: string[], size = 100) {\n    const jsonArray = (a: string[]) => `${a.length ? \"[\\\"\" + a.join(`\", \"`) + \"\\\"]\" : \"[]\"}`;\n    if (items.length <= size) {\n        return `/* ${items.length.toString().padStart(3)} */ ${jsonArray(items)},`;\n    }\n    const len = (n: number) => n.toString().length;\n    const count = Math.trunc(items.length / size);\n    const comment = items.length.toString().padStart(1 + len(items.length)) + \" \".repeat(3 + len(count));\n    const parts = [`/* ${comment} */`];\n    for (let i = 0; i <= count; i++) {\n        const part = items.slice(size * i, size + size * i);\n        const page = `(${i + 1})`.padStart(2 + len(count));\n        const pageCount = part.length.toString().padStart(1 + len(items.length));\n        parts.push(`/* ${pageCount} ${page} */ ${jsonArray(part)},`);\n    }\n    return parts.join(\"\\n\");\n}\n","<template>\n  <div class=\"row row-cols-lg-3 g-3 align-items-end\">\n    <div class=\"input col-12\">\n      <label for=\"urls-textarea\" class=\"fuck-off-lighthouse\"></label>\n      <textarea id=\"urls-textarea\" spellcheck=\"false\"\n                v-model=\"inputText\"\n                ref=\"textareaEl\"\n      ></textarea>\n    </div>\n    <div class=\"input col-12\">\n      <span  class=\"row\">\n        <span class=\".col m-1\">\n          <span class=\"btn-group\">\n            <span class=\"input-group-text me-2\">Clipboard</span>\n          </span>\n          <button class=\"btn btn-outline-primary me-1\"\n                  @click=\"onReplaceClipboardText\"\n          >Replace</button>\n          <button class=\"btn btn-outline-primary me-1\"\n                  @click=\"onAppendClipboardText\"\n          >Append</button>\n        </span>\n        <span class=\".col m-1\">\n          <span class=\"btn-group\">\n            <span class=\"input-group-text me-2 text-center\">Controls</span>\n          </span>\n          <button class=\"btn btn-outline-primary me-1\"\n                  @click=\"onClearTextInput\"\n          >Clear</button>\n          <button class=\"btn btn-primary me-1\" title=\"Copy URLs\"\n                  @click=\"onCopyUrlsAsList\"\n                  @contextmenu=\"onCopyUrlsAsColumn\"\n                  @pointerdown=\"onCopyUrlsAsCodeArrays\"\n          >Copy</button>\n        </span>\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {Ref, ref} from \"vue\";\nimport {sleep} from \"@alttiri/util-js\";\nimport {getCodeArrays, inputText, urls} from \"./core\";\n\n\nconst blinkButtonMap = new WeakMap();\nasync function blink(elem: HTMLElement) {\n  elem.classList.add(\"btn-active\");\n  const sleep_time = sleep(150);\n  blinkButtonMap.set(elem, sleep_time);\n  await sleep_time;\n  if (blinkButtonMap.get(elem) === sleep_time) {\n    elem.classList.remove(\"btn-active\");\n  }\n}\n\n\nconst textareaEl: Ref<HTMLTextAreaElement | null> = ref(null);\n\nfunction onClearTextInput(event: MouseEvent) {\n  inputText.value = \"\";\n  textareaEl.value?.focus();\n  void blink(event.currentTarget as HTMLElement);\n}\n\n\nfunction onCopyUrlsAsList(event: MouseEvent) {\n  void navigator.clipboard.writeText(urls.value.join(\" \"));\n  void blink(event.currentTarget as HTMLElement);\n}\nfunction onCopyUrlsAsColumn(event: MouseEvent) {\n  event.preventDefault();\n  void navigator.clipboard.writeText(urls.value.join(\"\\n\"));\n  void blink(event.currentTarget as HTMLElement);\n}\nfunction onCopyUrlsAsCodeArrays(event: PointerEvent) {\n  const MIDDLE_BUTTON = 1;\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    void navigator.clipboard.writeText(getCodeArrays(urls.value));\n    void blink(event.currentTarget as HTMLElement);\n  }\n}\n\nasync function onAppendClipboardText(event: MouseEvent) {\n  const {currentTarget} = event;\n  const text = await navigator.clipboard.readText();\n  console.log(\"[clipboard] readText:\", text);\n  if (inputText.value && !inputText.value.endsWith(\"\\n\")) {\n    inputText.value += \"\\n\";\n  }\n  inputText.value += text;\n  void blink(currentTarget as HTMLElement);\n}\nasync function onReplaceClipboardText(event: MouseEvent) {\n  const {currentTarget} = event;\n  const text = await navigator.clipboard.readText();\n  console.log(\"[clipboard] readText:\", text);\n  inputText.value = text;\n  void blink(currentTarget as HTMLElement);\n}\n\n\n\n</script>\n\n<style scoped>\n\n\n.btn-group > .input-group-text {\n  width: 100px;\n  justify-content: center;\n}\n.btn-active,\n.btn-active:active {\n  background-color: black;\n  color: white;\n}\n\ntextarea {\n  width: 100%;\n  height: 82px;\n  resize: none;\n}\ntextarea:focus {\n  outline: none;\n}\n\n.fuck-off-lighthouse {\n  position: absolute;\n  top: -1000px;\n  left: -1000px;\n  height: 0;\n  width: 0;\n}\n</style>\n","<template>\n  <div>\n    <table class=\"table table-borderless\">\n      <tbody>\n      <tr v-for=\"ue in urlEntryList\" :key=\"ue.url\">\n        <td>\n          <span class=\"info-dot\"\n                :class=\"{['has-comment']: ue.comment}\"\n                :title=\"ue.comment\"\n                @contextmenu=\"onInfoDotContextMenu\"\n          ></span>\n          <a class=\"url link-primary\" target=\"_blank\" rel=\"noreferrer noopener\"\n             :href=\"ue.url\"\n             :title=\"ue.comment\"\n             @click=\"onClick\"\n          >{{ue.url}}</a>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {urlEntryList} from \"./core\";\n\nfunction onClick(event: MouseEvent) {\n  const linkEl = event.currentTarget as HTMLAnchorElement;\n  linkEl.parentElement?.classList.add(\"clicked\");\n}\n\nfunction onInfoDotContextMenu(event: MouseEvent) {\n  event.preventDefault();\n  const spanEl = event.currentTarget as HTMLElement;\n  spanEl.parentElement?.classList.toggle(\"clicked\");\n}\n\n</script>\n\n<style scoped>\na {\n  margin-left: 4px;\n  text-decoration: none;\n  vertical-align: middle;\n}\na:visited {\n  color: #6f42c1 !important;\n}\n.clicked {\n  background-color: #0000000f;\n}\n.info-dot {\n  height: 16px;\n  width: 16px;\n  background-color: #0000000f;\n  vertical-align: middle;\n  display: inline-block;\n  border-radius: 8px;\n  border: 1px solid white;\n}\n.has-comment {\n  border: 1px solid gray;\n}\n</style>\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"names":["inputText","ref","urlEntryList","computed","parseUrlEntries","urls","ue","text","lines","line","main","comments","firstWord","words","url","matchUrl","word","match","getCodeArrays","items","size","jsonArray","a","len","n","count","parts","i","part","page","pageCount","blinkButtonMap","blink","elem","sleep_time","sleep","textareaEl","onClearTextInput","event","_a","onCopyUrlsAsList","onCopyUrlsAsColumn","onCopyUrlsAsCodeArrays","onAppendClipboardText","currentTarget","onReplaceClipboardText","onClick","onInfoDotContextMenu","createApp","App"],"mappings":"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"}